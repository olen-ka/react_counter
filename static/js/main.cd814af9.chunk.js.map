{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","count","add100","addOne","increase","className","type","onClick","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gOAIaA,G,YAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,OAAQC,EAA1B,EAA0BA,SAA1B,OACrB,yBAAKC,UAAU,OACb,wBAAIA,UAAU,gBAAd,iBACaJ,IAGb,4BACEI,UAAU,cACVC,KAAK,SACLC,QAASJ,GAHX,SAOA,4BACEE,UAAU,cACVC,KAAK,SACLC,QAASL,GAHX,WAOA,4BACEG,UAAU,cACVC,KAAK,SACLC,QAASH,GAHX,eCiBWI,E,4MApCbC,MAAQ,CACNR,MAAO,G,EAGTE,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,O,EAIzBC,OAAS,WACP,EAAKQ,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,S,EAIzBG,SAAW,kBACR,EAAKK,MAAMR,MAAQ,IAAM,EACtB,EAAKC,SACL,EAAKC,U,uDAGD,IACAF,EAAUU,KAAKF,MAAfR,MAER,OACE,kBAAC,EAAD,CACEA,MAAOA,EACPE,OAAQQ,KAAKR,OACbD,OAAQS,KAAKT,OACbE,SAAUO,KAAKP,e,GA/BLQ,IAAMC,WCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.cd814af9.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport './Counter.scss';\n\nexport const Counter = ({ count, add100, addOne, increase }) => (\n  <div className=\"app\">\n    <h1 className=\"app__heading\">\n      {`Count: ${count}`}\n    </h1>\n\n    <button\n      className=\"app__button\"\n      type=\"button\"\n      onClick={addOne}\n    >\n      Add 1\n    </button>\n    <button\n      className=\"app__button\"\n      type=\"button\"\n      onClick={add100}\n    >\n      Add 100\n    </button>\n    <button\n      className=\"app__button\"\n      type=\"button\"\n      onClick={increase}\n    >\n      Increase\n    </button>\n  </div>\n);\n\nCounter.propTypes = {\n  count: propTypes.number.isRequired,\n  addOne: propTypes.func.isRequired,\n  add100: propTypes.func.isRequired,\n  increase: propTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Counter } from './components/Counter';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  };\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => (\n    (this.state.count % 5 === 0)\n      ? this.add100()\n      : this.addOne()\n  );\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <Counter\n        count={count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}